<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>es.xan</groupId>
	<artifactId>servantV3</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- the main verticle class name -->
		<main.verticle>es.xan.servantv3.App</main.verticle>

		<vertx.version>3.3.3</vertx.version>
		<smack.version>4.0.5</smack.version>
		<httpclient.version>4.3.3</httpclient.version>
		<commons.io.version>2.5</commons.io.version>
		<commons.collections.version>4.0</commons.collections.version>
		<jsch.version>0.1.54</jsch.version>
		<logback.version>1.0.13</logback.version>
		<julToSlf4j.version>1.7.24</julToSlf4j.version>
		<sentryLogback.version>7.8.5</sentryLogback.version>

    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	
    	<maven.compiler.source>1.8</maven.compiler.source>
    	<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
		</dependency>

		<!-- Add hazelcast deps if you want it clusterable -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<version>${vertx.version}</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>${vertx.version}</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-mongo-client</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-core</artifactId>
			<version>${smack.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-tcp</artifactId>
			<version>${smack.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-extensions</artifactId>
			<version>${smack.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-debug</artifactId>
			<version>${smack.version}</version>
		</dependency>
		
		 <dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		
		 <dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		
		 <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>${jsch.version}</version>
		</dependency>
		
		<dependency> 
  			<groupId>ch.qos.logback</groupId>
  			<artifactId>logback-classic</artifactId>
  			<version>${logback.version}</version>
		</dependency>
		
		<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>jul-to-slf4j</artifactId>
    		<version>${julToSlf4j.version}</version>
		</dependency>
		
		<dependency>
    		<groupId>com.getsentry.raven</groupId>
    		<artifactId>raven-logback</artifactId>
    		<version>${sentryLogback.version}</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- We specify the Maven compiler plugin as we need to set it to Java 
					1.8 -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- You only need the part below if you want to build your application 
			into a fat executable jar. This is a jar that contains all the dependencies 
			required to run it, so you can just run it with java -jar -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>io.vertx.core.Launcher</Main-Class>
										<Main-Verticle>${main.verticle}</Main-Verticle>
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
								</transformer>
							</transformers>
							<artifactSet>
							</artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>run</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>io.vertx.core.Launcher</mainClass>
							<arguments>
								<argument>run</argument>
								<argument>${main.verticle}</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>run-app</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-jar</argument>
								<argument>target/${project.artifactId}-${project.version}-fat.jar</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
